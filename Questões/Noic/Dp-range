#include <bits/stdc++.h>
using namespace std;

const int maxn = 250;
int dp[maxn][maxn];
int n;
int vet[maxn];

int solve(int l, int r)
{
     if (dp[l][r] != -2)
     {
          return dp[l][r];
     }
     if (l == r)
     {
          return dp[l][r] = vet[l];
     }
     int mx = -1;
     for (int i = l; i < r; i++)
     {
          int a = solve(l, i);
          int b = solve(i + 1, r);

          if (a == b && a != -1)
          {
               mx = max(mx, a + 1);
          }
     }
     return dp[l][r] = mx;
}

int main()
{
     cin >> n;
     for (int i = 0; i < n; i++)
     {
          cin >> vet[i];
     }
     for (int i = 0; i < maxn; i++)
     {
          for (int j = 0; j < maxn; j++)
          {
               dp[i][j] = -2;
          }
     }
     solve(0, n - 1);
     int mx = 0;
     for (int i = 0; i < n; i++)
     {
          for (int j = i; j < n; j++)
          {

               mx = max(mx, dp[i][j]);
          }
     }
     cout << mx;
}
