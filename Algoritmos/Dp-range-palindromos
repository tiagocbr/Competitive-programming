#include <bits/stdc++.h>
using namespace std;
const int maxn = 5e3 + 5;
int dp[maxn][maxn];
int dp_pal[maxn][maxn];
string s;

int pal(int l, int r)
{
     if (dp_pal[l][r] != -1)
     {
          return dp_pal[l][r];
     }
     if (l == r || l > r)
     {
          return dp_pal[l][r] = 1;
     }
     return dp_pal[l][r] = (s[l] == s[r]) ? (pal(l + 1, r - 1)) : 0;
}

int solve(int l, int r)
{
     if (dp[l][r] != -1)
     {
          return dp[l][r];
     }
     if (l == r)
     {
          return dp[l][r] = 1;
     }
     if (l > r)
     {
          return dp[l][r] = 0;
     }
     return dp[l][r] = solve(l + 1, r) + solve(l, r - 1) - solve(l + 1, r - 1) + pal(l, r);
}

int main()
{
     cin >> s;
     int q;
     cin >> q;
     for (int i = 0; i < maxn; i++)
     {
          for (int j = 0; j < maxn; j++)
          {
               dp[i][j] = -1;
               dp_pal[i][j] = -1;
          }
     }
     for (int i = 0; i < q; i++)
     {
          int a, b;
          cin >> a >> b;
          cout << solve(a - 1, b - 1) << endl;
     }
}
