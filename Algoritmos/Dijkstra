#include <bits/stdc++.h>
using namespace std;

int visitado[1010];
vector<pair<int,int>> viz;
int distancia[1010];
const int maxn=1000000000;

void dijkstra(int n){
     for(int i=0;i<=n+1;i++){
          distancia[i]=maxn;
     }
     distancia[n+1]=0;
     priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> fila;
     fila.push({0,n+1});

     while(true){
          bool ok=true;
          int davez;

          while(!fila.empty()){
               pair<int,int> x=fila.top();
               fila.pop();
               if(visitado[x.second]==0){
                    visitado[x.second]==1;
                    davez=x.second;ok=false;
                    break;
               }

          }

          if(ok)break;

          for(int i=0;i<viz[davez].size();i++){
               if(distancia[viz[davez][i].second]>distancia[davez]+viz[davez][i].first){
                   distancia[viz[davez][i].second]=distancia[davez]+viz[davez][i].first;
                   fila.push({distancia[viz[davez][i].second],viz[davez][i].second});
               }
          }
     }
}


int main(){
     int n,m;cin>>n>>m;

     for(int i=0;i<m;i++){
          int x,y,z;cin>>x>>y>>z;

          viz[y].push_back({z,x});
          viz[x].push_back({z,y});
     }

     dijkstra(n);

     cout<<distancia[0];
     
}
